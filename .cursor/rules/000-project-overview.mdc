---
description: 
globs: 
alwaysApply: false
---
---
description: Apply core project principles when developing the X Clone application
globs: ["**/*"]
tags: ["core", "overview", "architecture"]
priority: 5
version: 1.0.0
---

# X Clone Project: Core Principles

## Project Overview
- X Clone is a social media application similar to Twitter/X
- Built using Domain-Driven Design (DDD) and Clean Architecture principles
- Backend: Kotlin + Spring Boot; Frontend: Next.js
- All development follows Test-Driven Development (TDD) approach

## Core Architecture
- **Domain-Driven Design**: Focus on core domain concepts and bounded contexts
- **Clean Architecture**: Layers from innermost to outermost:
  1. Entities (core business rules, domain models)
  2. Use Cases (application-specific business rules)
  3. Interface Adapters (controllers, presenters, gateways)
  4. Frameworks & Drivers (DB, UI, external systems)
- **Dependency Rule**: Dependencies point inward, inner layers know nothing about outer layers

## Main Domain Boundaries
- User Management (user)
- Post Management (post)
- Timeline (timeline)
- Notification (notification)
- Relationship (relationship)

## Development Principles
- AI-Driven Development: Leverage AI tools for code generation
- TDD: Write tests before implementation
- Docker-based development environment
- Environment variables for configuration
- Documentation in code

## Naming Conventions
- Use meaningful, descriptive names
- Backend: Kotlin conventions with domain boundary as package prefix
- Frontend: React component conventions with descriptive file naming
- Tests: Descriptive of the behavior being tested

## Performance Considerations
- Cache appropriate data in Redis
- Optimize database queries
- Frontend: Use appropriate React patterns for performance
- Test execution speed is a priority for CI/CD pipeline 