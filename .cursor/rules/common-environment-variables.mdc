---
description: Spring Boot環境変数管理
globs: **/resources/application*.yml
alwaysApply: false
---
# Spring Boot環境変数管理

## application.yml パターン
```yaml
spring:
  datasource:
    url: ${DB_URL:jdbc:mysql://localhost:3306/app_db}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:password}

app:
  jwt:
    secret: ${JWT_SECRET:dev-only-secret}
    expiration: ${JWT_EXPIRATION:86400000}
```

## プロファイル管理
```yaml
# application.yml
spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}

# application-local.yml
spring:
  datasource:
    url: jdbc:h2:mem:testdb
    
# application-prod.yml
spring:
  datasource:
    url: ${DB_URL}
```

## コード内での使用
```kotlin
@Configuration
class AppConfig(
    @Value("\${app.jwt.secret}") val jwtSecret: String
)
```

## パターン
- 環境変数にデフォルト値を設定（開発環境用）
- 本番環境では実際の環境変数を使用
- プロファイルで環境別設定を分離
- 機密情報は環境変数で注入

## アンチパターン
❌ 機密情報をハードコーディング
❌ 環境変数なしでアプリケーションが起動しない設計 