---
description: 
globs: 
alwaysApply: false
---
---
description: フロントエンド環境変数管理ガイドライン
globs: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/next.config.*", "**/package.json", "**/.env.*"]
---
# フロントエンド環境変数管理ガイドライン

このルールは、フロントエンド（Next.js）における環境変数の適切な管理方法を定義しています。

## フロントエンドルール

### フロントエンド環境変数ファイル

- Next.js の環境変数機能を活用し、`frontend/.env.local` を使用してください
- ビルド時に必要な環境変数と実行時に必要な環境変数を区別してください
- 環境ごとに異なる設定を`.env.development`、`.env.production`などで管理してください
- デフォルト値は`.env`ファイルに記述し、環境固有の値で上書きする構成を検討してください

### フロントエンド環境変数の命名規則

- 公開可能な環境変数（クライアントサイドで利用可能）には `NEXT_PUBLIC_` プレフィックスを付けてください
- API URLには `NEXT_PUBLIC_API_URL` を使用してください
- 非公開環境変数（サーバーサイドのみで利用）にはプレフィックスを付けないでください
- スネークケースの大文字を使用してください（例: `NEXT_PUBLIC_FEATURE_FLAG_ENABLE_NEW_UI`）
- 機能フラグには `NEXT_PUBLIC_FEATURE_` プレフィックスを使用してください
- APIエンドポイント設定には `NEXT_PUBLIC_API_` プレフィックスを使用してください
- 分析ツール設定には `NEXT_PUBLIC_ANALYTICS_` プレフィックスを使用してください

### フロントエンド環境変数の検証

- ビルド時に必須環境変数が存在することを確認してください
- 欠落している環境変数がある場合は、ビルドプロセスを中断するか警告を表示してください
- 環境変数が正しく設定されていない場合のフォールバック値を提供してください
- 本番ビルド前に環境変数が正しく設定されているか検証するスクリプトを導入してください

### フロントエンド環境変数の利用

- 環境変数へのアクセスを集約する設定モジュールを作成し、そこから参照するようにしてください
- クライアントサイドで使用する環境変数は必ず`NEXT_PUBLIC_`で始まるものだけを使用してください
- サーバーサイドでのみ使用する機密情報は絶対にクライアントに漏れないよう注意してください
- 環境変数の型チェックと変換を行うユーティリティ関数を使用してください（例: 文字列から数値への変換など） 